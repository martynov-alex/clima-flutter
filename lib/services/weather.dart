import 'package:clima/services/location.dart';
import 'package:clima/services/networking.dart';
import 'package:clima/services/get_country_name.dart';
import 'package:flutter/cupertino.dart';

const apiKey = '4d97e3c9526feb93f8d3a07212dafe1e';
const openWeatherMapURL = 'http://api.openweathermap.org/data/2.5/weather';

class WeatherModel {
  Future<dynamic> getLocationWeather() async {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–µ–∫—É—â–µ–π –≥–µ–æ–ø–æ–∑–∏—Ü–∏–∏ (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Location –∏–∑ location.dart
    Location location = Location();

    // –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ—Ç–æ–¥ getCurrentLocation() –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏ –∑–∞–ø–∏—Å–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    // –≤ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—ä–µ–∫—Ç–∞
    await location.getCurrentLocation();

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ NetworkHelper –∏–∑ networking.dart
    // –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–µ—Ä–≤–∏—Å—É OneWeatherMap –≤
    // —Ñ–æ—Ä–º–∞—Ç–µ URL –∑–∞–ø—Ä–æ—Å–∞
    var url =
        '$openWeatherMapURL?lat=${location.latitude}&lon=${location.longitude}&units=metric&appid=$apiKey';
    NetworkHelper networkHelper = NetworkHelper(url);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ—Ç–æ–¥ getData() –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ –≤ –≤–∏–¥–µ JSON
    // —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä—Å–∏—Ç—Å—è –≤ —Å–ª–æ–≤–∞—Ä—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è
    var weatherData = await networkHelper.getData();

    // –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç OneWeatherMap –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –ø–æ ISO 3166-1 alpha-2
    // –≤ –ø–æ–ª–Ω–æ–µ –∞–Ω–≥–ª–æ—è–∑—ã—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ CountryProviderService –∏–∑ get_country_name.dart
    CountryProviderService countryProviderService = CountryProviderService();

    // –ó–∞–ø—É—Å–∫–∞–µ–º –º–µ—Ç–æ–¥ getCountryName() –¥–ª—è –ø–ª—É—á–µ–Ω–∏—è –æ—Ç —Å–µ—Ä–≤–∏—Å–∞ –¥–∞–Ω–Ω—ã—Ö –æ
    // —Å—Ç—Ä–∞–Ω–µ –ø–æ –∫–æ–¥—É —Å—Ç—Ä–∞–Ω—ã, —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Country
    var country = await countryProviderService.getCountryName(
        countryCode: weatherData['sys']['country']);

    // –ò–º—è —Å—Ç—Ä–∞–Ω—ã —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ name –æ–±—ä–µ–∫—Ç–∞
    weatherData['countryFullName'] = country.name;

    // –ò–º—è —Å—Ç—Ä–∞–Ω—ã —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ name –æ–±—ä–µ–∫—Ç–∞
    //String countryName = country.name;

    return weatherData;
  }

  // –ê–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –º–µ—Ç–æ–¥, –Ω–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
  Future<dynamic> getCityWeather({String cityName = ''}) async {
    var url = '$openWeatherMapURL?q=$cityName&units=metric&appid=$apiKey';
    NetworkHelper networkHelper = NetworkHelper(url);
    var weatherData = await networkHelper.getData();
    CountryProviderService countryProviderService = CountryProviderService();
    var country = await countryProviderService.getCountryName(
        countryCode: weatherData['sys']['country']);
    weatherData['countryFullName'] = country.name;
    return weatherData;
  }

  String getWeatherIcon(int condition) {
    if (condition < 300) {
      return 'üå©';
    } else if (condition < 400) {
      return 'üåß';
    } else if (condition < 600) {
      return '‚òîÔ∏è';
    } else if (condition < 700) {
      return '‚òÉÔ∏è';
    } else if (condition < 800) {
      return 'üå´';
    } else if (condition == 800) {
      return '‚òÄÔ∏è';
    } else if (condition <= 804) {
      return '‚òÅÔ∏è';
    } else {
      return 'ü§∑‚Äç';
    }
  }

  String getMessage(int temp) {
    if (temp > 25) {
      return 'It\'s üç¶ time';
    } else if (temp > 20) {
      return 'Time for shorts and üëï';
    } else if (temp < 10) {
      return 'You\'ll need üß£ and üß§';
    } else {
      return 'Bring a üß• just in case';
    }
  }
}
